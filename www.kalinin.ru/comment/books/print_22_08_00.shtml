<html><head><title>ALK :: Книги :: "Java 2, руководство разработчика."</title>
</head>
<body bgcolor="white" text="black">
<a href="http://counter.rambler.ru/top100/"><img align="left" src="http://counter.rambler.ru/top100.cnt?160852" alt="Rambler's Top100 Service" width=1 height=1 border=0></a>
Этот текст распечатан с домашней странички Андрея Калинина 
(<a href="http://www.kalinin.ru">www.kalinin.ru</a>).<br>
Оригинал статьи находится по этому адресу: <a href="http://www.kalinin.ru/comment/books/22_08_00.shtml">http://www.kalinin.ru/comment/books/22_08_00.shtml</a><br>
<hr>
<br>

<h1>Java 2: руководство разработчика
</h1>
<p align="right">22.08.00</p>
 
<table align="right" border="0" cellspacing="0" cellpadding="5" width="150">
<tr><td></td></tr>
<tr><td>&nbsp;</td>
<td bgcolor="#cccccc" width="100%" nowrap>Иллюстрация</td>
</tr>
<tr><td colspan="2"></td></tr>
<tr>
<td>&nbsp;</td>
<td width="100%"><img src="/images/22_08_00_1.jpg" width="150" height="218" border="0" alt="Обложка книги." /></td></tr>
<tr>
<td>&nbsp;</td>
<td width="100%">
Обложка книги.
</td></tr>
</table>
    <p align="justify">
      Я решил, что мне нужна книга по Java тогда, когда появилось
      требование что-то написать на этом языке более серьезное,
      чем рисование в окошке окружности. 
    </p>
    <p align="justify">
      Все книги по Java, как мне кажется, отличаются одним и тем же
      недостатком: они все рассчитаны на начинающих программистов (каким бы самомнением
      эта фраза не отдавала бы). Причем,
      начинающих программировать не конкретно на Java, а "вообще". Я решил
      купить именно "руководство разработчика" по нескольким причинам: во-первых,
      это единственная книга по Java 2, остальные все рассчитаны на JDK 1.1.x. Во-вторых,
      она достаточно "толстая" и в твердом переплете, это мне всегда нравилось в книгах ;)
      В третьих, мне понравились некоторые пункты содержания, например: "высокоуровневые
      сетевые операции с использованием ORB-серверов" или "проектирование с использованием
      языка UML". 
    </p>
    <p align="justify">
      Тем не менее, мне потребовалось два дня на то, что бы понять окончательно,
      что книгу я купил совершенно напрасно. Потому что в "руководстве 
      разработчика" никак не может быть подобных фраз:
    </p>
<table align="center" border="0" cellspacing="0" cellpadding="5" width="60%">
<tr><<td bgcolor="#cccccc" width="100%" nowrap>Цитата</td></tr>
<tr><td></td></tr>
<tr>
<td colspan="2" width="100%">
    <p align="justify">
      В Mac OS не существует режима командной строки. Что бы запустить
      приложение, написаное на Java, перетащите пиктограмму файла класса
      на пиктограмму интерпретатора Java.
    </p>
</td></tr>
</table>
    <p align="justify">
      Я более чем уверен в том, что "разработчику" такие комментарии ни к чему.
      Потому что какой он "разработчик", если не умеет запустить приложение
      в своей операционной системе? Конечно же, этот комментарий расположен на
      33 странице, в самом начале книги и можно делать поправку на то, что это,
      все-таки, вводные главы... тем не менее "разработчик" вполне способен
      обратиться к документации на операционную систему для того, что бы
      узнать как ему запускать приложения. Следующая "врезка" тоже стоит цитирования:
    </p>
<table align="center" border="0" cellspacing="0" cellpadding="5" width="60%">
<tr><<td bgcolor="#cccccc" width="100%" nowrap>Цитата</td></tr>
<tr><td></td></tr>
<tr>
<td colspan="2" width="100%">
    <p align="justify">
      ... Тогда конечному пользователю для запуска вашего приложения, как и для
      запуска любой другой программы, будет достаточно дважды щелкнуть на пиктограмме
      командного файла.
    </p>
</td></tr>
</table>
    <p align="justify">
      Это просто смешно. Меня можно, конечно же, обвинить в том, что я уж очень сильно 
      придираюсь, но это все-таки показатель. Вся книга далее примерно такого же "сопливого"
      содержания. 
    </p>
    <p align="justify">
      Я совершенно не понимаю, зачем в "руководство разработчика" по Java включены
      главы, посвященные объектно-ориентированному анализу при помощи UML. Существуют
      очень хорошие книги по UML, к ним и надо, в принципе, отсылать читателя, а не 
      мусолить эту тему лишний раз --- все-таки, книга посвящена Java 2? Т.е., если бы в книге
      была бы описана специфика применения UML к проектированию программных комплексов,
      написанных на Java, то это было бы понятно. Но "вводные главы" можно прочитать и отдельно.
    </p>
    <p align="justify">
      В принципе, я понмаю, почему книга вызывает у меня такое неудовольствие.
      Скорее всего, это не недостаток самой книги, а особенности Java как языка программирования.
      Ведь, если сравнивать его с C++, то Java будет значительно проще. Именно как язык
      программирования. Из Java удалены практически все "тонкие" моменты C++ --- т.е.,
      в принципе, конструкции языка, которые пишет человек, только что начавший
      использовать Java, и профессионал, друг от друга будут отличаться в меньшей
      степени, чем если использовать C++. Упрощено все: вплоть до того, что не надо
      заботиться о том, что бы определение функции (к примеру) предшествовало ее использованию.
      Еще раз повторю --- сам по себе язык программирования Java прост в использовании.
    </p>
    <p align="justify">
      Тогда единственную сложность представляет стандартная библиотека
      Java, но ее значительно проще изучать по предоставляемой документации,
      в ней, все-таки, есть гипертекстовые ссылки, а это много удобнее перелистывания
      бумажных страниц. 
    </p>
    <p align="justify">
      Таким образом, любая книга по Java будет ориентирована на людей,
      которые по большому счету не знакомы с программированием. Именно поэтому
      в них так много "воды". "Руководство разработчика" не стало исключением
      из этого правила.
    </p>

<h2>Резюме</h2>
    <p align="justify">
      Я так думаю, что для изучения Java (конечно же, если уже хорошо
      знаком какой-либо другой язык программирования) книга не нужна вообще ---
      документации, поставляемой с JDK хватает за глаза. Самое лучшее,
      что можно придумать для изучения Java это попытки его реального использования.
      В нем меньше ньюансов, чем в C++, поэтому сам язык не доставит особенных
      неприятностей (кроме привыкания к характерным особенностям), а стандартная библиотека
      выстроена в достаточной степени логично для того что бы с ней разобраться по документации.
    </p>



<h2>Ссылки по теме</h2>


<table width="100%" border="0" cellspacing="0" cellpadding="5">
<tr><td><a href="http://java.sun.com" target="_blank">http://java.sun.com</a></td>
<td width="100%">
     Сайт разработчика языка программирования Java, на котором можно     скачать последнюю версию JDK.
</td></tr>
</table>


<hr>
&copy;2000-2001 by Andrey L. Kalinin, 
<a href="http://counter.rambler.ru/top100/" alt="Rambler's Top100" target="_blank"><img align=right src="http://images.rambler.ru/top100/banner-88x31-rambler-black2.gif" border=0 width=88 height=31></a>
<br>
andrey@kalinin.ru
</body>
</html>
