<html><head></head><body color="#FFFFFF">

   <font face="arial,sans-serif" size="2" color="#000099">
   <b>
   URL: /cgi-bin/dcforum/dcboard.cgi<br>
   Forum: DCForumID1<br>
   Thread Number: 150<br>
   [ <a href="http://www.kalinin.ru/dcforum//DCForumID1/150.html">Go back to previous page</a> ]
   </b><hr>
   
<b><font size=2>Original Message<hr>"Case системы"</font></b><br>
Posted by Dedal  on 28-Nov-04 at 11:11&nbsp;PM<br>
<blockquote>Всем доброго времени суток.<BR>Тут вот мне одно заданьице попалось:<BR>Разработать мини Case систему проектирования программ для реализации математических моделей. Система должна позволять моделировать функцию у=F1(x)*F2(x)*F3(x), <BR>где Fi - это функция из набора  у=sqrt(х); у=1/х; у=еxp(х).<BR>Разработанная программа должна позволять осуществлять визуальное комбинирование последовательности связи из экземпляров имеющихся в программе объектов: входом, выходом, и тремя видами вышеуказанных функций.<BR>Программа должна содержать кнопку и механизм генерации исходного текста на языке Паскаль. В результате выполнения данного механизма, должен быть сгенерирован работоспособный исходный  текст программы для вычисления заданного в разработанной программе выражения.<P>Для решения я использовал стандартный на мой взгляд метод - конечнй автомат.<BR>Вот его код:<BR>float	Analiz(const char *text, //Исодный текст функции<BR>double x, //Значение аргумента соответственно<BR>char *source) //Исодный екст на Pascal<BR>	{<BR>	BYTE state,it;<BR>	double y=1.0;<BR>	char tt<5>;<BR>	strcpy(source,"Program C_A_S_E;\r\nvar x:real;\r\nfunction y(x:real):real;\r\nvar ret:real;\r\nbegin\r\nret:=1;\r\n");<BR>	state = 1;<BR>	if(text<0>!='\0')		{<BR>	for(it=0;it&lt;strlen(text);it  )<BR>	if(text<it>==' ')it  ;else<BR>	switch(state)			{<BR>			case 1:<BR>				if(text<it>=='F')<BR>				state = 2;else<BR>				if(text<it>=='&')				<BR>				break;else<BR>					{<BR>				MessageBox(NULL,"Введите символ 'F' или '&'","Синтаксическая ошибка",MB_OK);<BR>				return 0.;<BR>					}<BR>				break;<P>			case 2:<BR>				switch(text<it>)<BR>					{<BR>					case '1':	state = 3;  break;<BR>					case '2':	state = 4;	break;<BR>					case '3':	state = 5;	break;<BR>					default:<BR>					MessageBox(NULL,"Ожидался номер функции","Синтаксическая ошибка",MB_OK); <BR>					return 0.;<BR>					}<BR>				/*if(text<it>=='1'){	state = 3;	break;}else<BR>				if(text<it>=='2'){	state = 4;	break;}else<BR>				if(text<it>=='3'){	state = 5;	break;}else<BR>					{<BR>			MessageBox(NULL,"Ожидался номер функции","Синтаксическая ошибка",MB_OK); <BR>			return 0.;<BR>					}			*/<BR>				break;<P>			case 3:<BR>				if(text<it>=='(')<BR>				state = 6;else<BR>					{<BR>				MessageBox(NULL,"Ожидалась скобка (","Синтаксическая ошибка",MB_OK); <BR>				return 0.;<BR>					}<BR>				break;<P>			case 4:<BR>				if(text<it>=='(')<BR>				state = 7;else<BR>					{<BR>				MessageBox(NULL,"Ожидалась скобка (","Синтаксическая ошибка",MB_OK); <BR>				return 0.;<BR>					}<BR>				break;<P>			case 5:<BR>				if(text<it>=='(')<BR>				state = 8;else<BR>					{<BR>				MessageBox(NULL,"Ожидалась скобка (","Синтаксическая ошибка",MB_OK); <BR>				return 0.;<BR>					}<BR>				break;<P>			case 6:<BR>				if(text<it>=='X'||text<it>=='x')<BR>					{<BR>				//if(x != 1.)<BR>				y*=sqrt(x);<BR>				strcat(source,<BR>					"ret:=ret*sqrt(x);\r\n");<BR>				state = 9;<BR>					}<BR>				else<BR>					{<BR>					MessageBox(NULL,"Ожидалась переменная",<BR>						"Синтаксическая ошибка",MB_OK);<BR>					return 0.;<BR>					}<BR>				break;<P>			case 7:<BR>				if(text<it>=='X'||text<it>=='x')<BR>					{<BR>				//if(x != 1.)<BR>				y*=1/x;<BR>				strcat(source,<BR>					"ret:=ret/x;\r\n");<BR>				state = 9;<BR>					}<BR>				else<BR>					{<BR>					MessageBox(NULL,"Ожидалась переменная",<BR>						"Синтаксическая ошибка",MB_OK);<BR>					return 0.;<BR>					}<BR>				break;<P>			case 8:<BR>				if(text<it>=='X'||text<it>=='x')<BR>					{<BR>				//if(x != 1.)<BR>				y*=exp(x);<BR>				strcat(source,<BR>					"ret:=ret*exp(x);\r\n");<BR>				state = 9;<BR>					}<BR>				else<BR>					{<BR>					MessageBox(NULL,"Ожидалась переменная",<BR>						"Синтаксическая ошибка",MB_OK);<BR>					return 0.;<BR>					}<BR>				break;<P>			case 9:<BR>				if(text<it>==')')<BR>					state = 10;<BR>				else<BR>					{<BR>				MessageBox(NULL,"Ожидалась скобка (","Синтаксическая ошибка",MB_OK);<BR>				return 0.;<BR>					}<BR>				break;<P>			case 10:<BR>				if(text<it>=='&')<BR>					{<BR>					strcat(source,"y:=ret;\r\nend;\r\nbegin\r\nreadln(x);\r\nwriteln(y(x));\r\nend.\0");<BR>					return y;<BR>					break;<BR>					}<BR>				else<BR>				if(text<it>=='*')<BR>					state = 1;<BR>				else				<BR>					{<BR>				sprintf(tt,"%d",it);<BR>				MessageBox(NULL,"Ожидался знак *(умножить)",tt,MB_OK);<BR>				return 0.;				<BR>					}				<BR>				break;<BR>			default: return y;<BR>			}<BR>		}<BR>		return y;<BR>}<BR>Писано на С (чистом) с использованием Windows API.<BR>Но Не это главное.<BR>Меня больше заинтересовал подобный метод создания ПО разного уровня. <BR>Как можно оптимизировать данный код?<BR>Где можно найти материалы по Case системам?(побольше хотелось бы;)<BR></blockquote><hr><b><font size=2>Table of contents</font></b><hr>
<hr><b><font size=2>Messages in this discussion</font></b><hr>
</font></body></html>
