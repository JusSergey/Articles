<html><head><title>ALK :: C&amp;C++ :: Коллекции исходных текстов.</title>
</head>
<body bgcolor="white" text="black">
<a href="http://counter.rambler.ru/top100/"><img align="left" src="http://counter.rambler.ru/top100.cnt?160852" alt="Rambler's Top100 Service" width=1 height=1 border=0></a>
Этот текст распечатан с домашней странички Андрея Калинина 
(<a href="http://www.kalinin.ru">www.kalinin.ru</a>).<br>
Оригинал статьи находится по этому адресу: <a href="http://www.kalinin.ru/programming/cpp/14_08_00.shtml">http://www.kalinin.ru/programming/cpp/14_08_00.shtml</a><br>
<hr>
<br>

<h1>Коллекции исходных текстов
</h1>
<p align="right">14.08.00</p>
 
    <p align="justify">
      В последние несколько дней я просматривал странички в РуНете 
      "братственной" направленности, т.е. посвященные программированию на C++.
      Я обнаружил чрезвычайно забавную вещь --- странички, содержание
      которых выходит за пределы публикации текста "Язык программирования
      C++" Страуструпа (1-е издание) и комплекта документации к Turbo C++ 1.0,
      достаточно редки. Хотя, вроде бы, количество профессиональных
      программистов на C++ велико. Но самое страшное,
      что меня раздражает окончательно, так это наборы исходных текстов
      "чего-либо". Я совершенно не понимаю целей, которые ставят перед
      собою авторы подобных страничек --- "у нас появился исходник программы,
      создающей эффект плазмы; прислано Васей".
      Мне, быть может, кто-то не поверит, но я видел страничку, на которой
      в разделе "C++ Cool Tips" были даны советы по тому, как не дать
      Windows 95 отреагировать на нажатие пользователем клавиш Alt-Tab или 
      УПР-ДОП-УДЛ... В смысле, я не против публикации исходных текстов
      или советов, как лучше написать словосочетание <code>#include &lt;windows.h&gt;</code>,
      но почему при этом заявляется, что страничка посвящена программированию
      на C++?
    </p>
    <p align="justify">
      Хочется сразу же дать некоторые определения. Существует программирование
      для какой-то операционной системы. Программист, который пишет "под Unix",
      "под Windows", "под DOS", это такой человек, который знает (или догадывается)
      зачем нужен какой-либо системный вызов, умеет написать драйвер устройства и
      пытался дизассемблировать код ядра (это не относится к Unix'у --- программист
      под Unix обычно пытается внести свои изменения в исходный текст ядра и посмотреть
      что получится).
    </p>
    <p align="justify">
      Существует программирование на каком-то языке программирования. Программист, претендующий
      на то, что он является программистом "на Бейсике", "на Паскале", "на C" или "на C++"
      может вообще ничего не знать о существовании конкретных операционных систем и архитектур
      (я, конечно же, сильно утрирую...), но обязан при этом знать тонкости своего языка программирования,
      знать о том, какие конструкции языка для чего эффективнее и т.д. и т.п.
    </p>
    <p align="justify">
      Понятно, что "программирование на языке" и "программирование под архитектуру" могут
      вполне пересекаться. Программист на C под Unix, например. Тем не менее, в особенности
      среди новичков, часто встречается подмена этих понятий. Стандартное письмо в конференцию:
      "я только начал изучать C++, подскажите пожалуйста, как создать окно произвольной формы?".
      В общем, нельзя, наверное, изучать сразу же операционную систему и язык программирования.
      Вопрос же "про окно" правомерен, наверное, только для Java, где работа
      с окнами находится в стандартной библиотеке языка. Но у C++ своя специфика, потому
      что даже задав вопрос "как напечатать на экране строку 'Hello, world!'?" можно
      напороться на раздраженное "покажи где у C++ экран". 
    </p>
    <p align="justify">
      Тем не менее, возвращаюсь к исходным текстам. Начинающие программисты обычно
      любят устраивать у себя разнообразные коллекции исходных текстов. Т.е., с десяток
      эмуляторов терминалов, пятнадцать библиотек пользовательского интерфейса,
      полсотни DirectX и OpenGL программ "на C". Кстати сказать, программирование
      с использованием OpenGL
      тоже можно отнести к отдельному классу, который ортогонален классам "операционная система" и
      "язык программирования". Почему-то люди упорно считают, что набрав большое количество различных
      программ малой, средней и большой тяжести, они решат себе много проблем, связанных
      с программированием. Это не так --- я совершенно не могу понять, чем на стадии обучения
      программированию может помочь исходник Quake.
    </p>
    <p align="justify">
      Этому есть простое объяснение. Читать исходные тексты чужих программ (да и своих, в принципе,
      тоже) очень нелегко. Умение "читать" программы само по себе признак высокого 
      мастерства. Смотреть же на текст программ как на примеры использования чего-либо
      тоже нельзя, потому что в реальных программах есть очень много
      конкретных деталей, связанных со  спецификой проекта, авторским подходом
      к решению некоторых задач и просто стилем программирования, а это 
      очень сильно загораживает действительно существенные идеи. 
    </p>
    <p align="justify">
      Кроме того, при чтении "исходников", очень часто 
      "программирование на языке" незаметно заменяется  "программированием под ОС". Ведь всегда хочется
      сделать что-то красивое, чем можно удивить родителей или знакомых? А еще
      хочется сделать так, что бы "как в Explorer" --- не могу забыть тот
      бум на компоненты flat buttons для Delphi/C++ Builder, когда только появился
      Internet Explorer 3.0. Это было что-то страшное, таких компонент появилось 
      просто дикое количество, а сколько программ сразу же появилось с их присутствием
      в интерфейсе...
    </p>
    <p align="justify">
      Изменять текст существующей программы тоже очень сложно. Дополнить ее
      какой-то новой возможностью, которая не ставилась в расчет первоначально,
      сложно вдвойне. Читать текст, который подвергался таким "изменениям" уже
      не просто сложно --- практически невозможно.
      Именно для этого люди придумали модульное программирование --- для того,
      что бы сузить, как только это возможно, степень зависимости между
      собой частей программы, которые пишутся различными программистами,
      или могут потребоваться в дальнейшем. 
    </p>
    <p align="justify">
      Чтение исходных текстов полезно, но уже потом, когда проблем
      с языком не будет. А до этого момента можно только перенять чужие ошибки.
    </p>

<h2>Резюме</h2>
    <p align="justify">
      Чтение исходных текстов, их коллекционирование никак не может
      помочь в начальном изучении языка программирования. Приемы,
      которые применяются разработчиками, значительно лучше воспринимаются
      когда они расписаны без излишних деталей и с большим количеством комментариев, для
      этого можно посоветовать книгу Джеффа Элджера "C++".
    </p>
<h2>PS</h2>
    <p align="justify">
      Честно говоря, я не собирался писать таких "сильно нравоучительных" заметок. Но за
      несколько дней, которые прошли с тех пор, как ссылки на мою страничку
      появились в каталогах, я получил уже несколько писем, из которых
      с удивлением узнал, что ее читают люди, которые только пытаются
      начать изучать C++. 
    </p>
    <p align="justify">
      Сам я, кстати, считаю, что лучше способа изучить C++, чем попытаться
      одолеть третье издание "Языка программирования C++" от Бьерна Страуструпа,
      нет. Эта книга, которая читается несколько раз, и при каждом чтении
      в ней можно найти что-то новое, на что не было обращено внимание раньше.
      Естественно, что при чтении книги надо обязательно пробовать что-то 
      написать.
    </p>




<h2>Ссылки по теме</h2>


<table width="100%" border="0" cellspacing="0" cellpadding="5">
<tr><td>Бъерн Страуструп</td>
<td width="100%">
     Язык программирования C++, 3 издание. 
</td></tr>
</table>


<hr>
&copy;2000-2001 by Andrey L. Kalinin, 
<a href="http://counter.rambler.ru/top100/" alt="Rambler's Top100" target="_blank"><img align=right src="http://images.rambler.ru/top100/banner-88x31-rambler-black2.gif" border=0 width=88 height=31></a>
<br>
andrey@kalinin.ru
</body>
</html>
